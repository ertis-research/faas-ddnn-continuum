apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-connector-openfaas-config
data:
  config.json: |-
    {
      "concurrency": 10,
      "brokers": [
        "kafka-0.kafka-headless.kafka:9092",
        "kafka-1.kafka-headless.kafka:9092"
      ],
      "callback": {
        "options": {
          "method": "POST",
          "keepalive": true
        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connector-openfaas-edge-input
  labels:
    name: kafka-connector-openfaas-edge-input
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kafka-connector-openfaas-edge-input
  template:
    metadata:
      labels:
        name: kafka-connector-openfaas-edge-input
    spec:
      containers:
        - name: connector
          image: 10.10.32.232:30501/kafka-connector:0.0.16
          imagePullPolicy: Always
          env:
            - name: KAFKAC_CLIENTID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKAC_TOPIC
              value: "openfaas.inference.edge-input"
            - name: KAFKAC_GROUPID
              value: "openfaas.inference.edge-input"
            - name: KAFKAC_CALLBACK_URL
              value: http://gateway.openfaas:8080/function/edge
          volumeMounts:
            - name: config
              mountPath: "/etc/kafkac"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: kafka-connector-openfaas-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connector-openfaas-fog-input
  labels:
    name: kafka-connector-openfaas-fog-input
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kafka-connector-openfaas-fog-input
  template:
    metadata:
      labels:
        name: kafka-connector-openfaas-fog-input
    spec:
      containers:
        - name: connector
          image: 10.10.32.232:30501/kafka-connector:0.0.16
          imagePullPolicy: Always
          env:
            - name: KAFKAC_CLIENTID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKAC_TOPIC
              value: "openfaas.inference.fog-input"
            - name: KAFKAC_GROUPID
              value: "openfaas.inference.fog-input"
            - name: KAFKAC_CALLBACK_URL
              value: http://gateway.openfaas:8080/function/fog
          volumeMounts:
            - name: config
              mountPath: "/etc/kafkac"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: kafka-connector-openfaas-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connector-openfaas-cloud-input
  labels:
    name: kafka-connector-openfaas-cloud-input
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: kafka-connector-openfaas-cloud-input
  template:
    metadata:
      labels:
        name: kafka-connector-openfaas-cloud-input
    spec:
      containers:
        - name: connector
          image: 10.10.32.232:30501/kafka-connector:0.0.16
          imagePullPolicy: Always
          env:
            - name: KAFKAC_CLIENTID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKAC_TOPIC
              value: "openfaas.inference.cloud-input"
            - name: KAFKAC_GROUPID
              value: "openfaas.inference.cloud-input"
            - name: KAFKAC_CALLBACK_URL
              value: http://gateway.openfaas:8080/function/cloud
          volumeMounts:
            - name: config
              mountPath: "/etc/kafkac"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: kafka-connector-openfaas-config
